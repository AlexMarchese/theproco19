#BlueJ class context
comment0.target=FabrikTest
comment0.text=\n\ Testklasse\ Fabriktest,\ um\ Fabrik\ und\ deren\ Methoden\ mit\ den\ davon\ abh\u00E4ngigen\ Klassen\ zu\ testen.\n\n\ @author\ \ GBI\ Gruppe\ 19\n\ @version\ 1.0\n
comment1.params=
comment1.target=FabrikTest()
comment1.text=\n\ Konstruktor\ von\ FabrikTest\n
comment10.params=
comment10.target=void\ testeBestellungenAusgeben()
comment10.text=\n\ \n\ Test\ der\ Methode\ "bestellungAusgeben()".\ \n\ Der\ Test\ \u00FCberpr\u00FCft,\ ob\ erstens\ bei\ der\ Ausf\u00FChrung\ der\ Methode\ ohne\ aufgegebene\ Bestellung\ \n\ der\ richtige\ Text\ zur\u00FCckgegeben\ wird\ und\ zweitens\ bei\ der\ Ausf\u00FChrung\ der\ Methode\ \n\ mit\ zurvor\ aufgegebenen\ Bestellungen\ der\ richtige\ Text\ zur\u00FCckgegeben\ wird,\n\ indem\ die\ R\u00FCckgabe\ mit\ der\ Vorgabe\ aus\ dem\ Test\ verglichen\ wird.\ \n\ \n
comment11.params=
comment11.target=void\ testeErstelleProdukte()
comment11.text=\n\ TO\ DO\n\ Test\ der\ Methode\ "bestellungAusgeben()".\ \n\ Der\ Test\ \u00FCberpr\u00FCft,\ ob\ erstens\ bei\ der\ Ausf\u00FChrung\ der\ Methode\ ohne\ aufgegebene\ Bestellung\ \n\ der\ richtige\ Text\ zur\u00FCckgegeben\ wird\ und\ zweitens\ bei\ der\ Ausf\u00FChrung\ der\ Methode\ \n\ mit\ zurvor\ aufgegebenen\ Bestellungen\ der\ richtige\ Text\ zur\u00FCckgegeben\ wird,\n\ indem\ die\ R\u00FCckgabe\ mit\ der\ Vorgabe\ aus\ dem\ Test\ verglichen\ wird.\ \n\ \n
comment2.params=
comment2.target=void\ setUp()
comment2.text=\n\ Anweisungen\ vor\ jedem\ Testlauf\n
comment3.params=
comment3.target=void\ tearDown()
comment3.text=\n\ Anweisungen\ nach\ jedem\ Testlauf\n
comment4.params=
comment4.target=void\ testeFabrik()
comment4.text=\n\ \n\ Der\ Test\ \u00FCberpr\u00FCft,\ ob\ die\ Erstellung\ einer\ Fabrik\ funktioniert.\ \n\ Dies\ wird\ \u00FCberpr\u00FCft,\ indem\ eine\ neue\ Fabrik\ erstellt\ wird\ und\ die\ initialisierten\ Werte\n\ ("leere\ Liste"\ und\ "BestellungsNrCounter\ auf\ 1")\ \ mit\ der\ Vorgabe\ aus\ dem\ Test\ vergliechen\ werden.\ \n\ \ \n
comment5.params=
comment5.target=void\ testeSetters()
comment5.text=\n\ Test\ der\ Setter-Methoden.\ \n\ Der\ Test\ \u00FCberpr\u00FCft,\ ob\ die\ Methoden\ (1)\ BestellungsListe\ auf\ Null\ setzt\ \ 2)\ die\ BestellungsListe\ bef\u00FCllt\ wird)\ \n\ wie\ erwartet\ ausgef\u00FChrt\ wird,\ indem\ die\ R\u00FCckgabe\ mit\ der\ Vorgabe\ aus\ dem\ Test\ verglichen\ wird.\n\ \ \n
comment6.params=
comment6.target=void\ testeBestellungAufgeben()
comment6.text=\n\ \n\ Test\ der\ Methode\ "bestellungAufgeben()".\ \n\ Der\ Test\ \u00FCberpr\u00FCft,\ ob\ nach\ Ausf\u00FChrung\ der\ Mehtode\ die\ Liste\ korrekt\ bef\u00FCllt\ \ \n\ und\ der\ BestellungsNrCounter\ erh\u00F6ht\ wird,\ \n\ indem\ eine\ Fabrik\ erstellt\ wird\ und\ die\ Ausf\u00FChrung\ mit\ der\ Vorgabe\ aus\ dem\ Test\ verglichen\ wird.\ \n\ \n
comment7.params=
comment7.target=void\ testeBestellungAufgebenNegativeWerte()
comment7.text=\n\ \n\ Test\ der\ Methode\ "bestellungAufgebenNegativWerte()".\ \n\ Der\ Test\ \u00FCberpr\u00FCft,\ ob\ bei\ der\ Eingabe\ von\ Negativwerten\ der\ richtige\ Text\ zur\u00FCckgegeben\ wird,\n\ indem\ die\ R\u00FCckgabe\ mit\ der\ Vorgabe\ aus\ dem\ Test\ verglichen\ wird.\ \n\ \n
comment8.params=
comment8.target=void\ testeBestellungAufgebenZuVielAufEinmal()
comment8.text=\ TO\ DO\n\ \n\ Test\ der\ Methode\ "bestellungAufgebenNegativWerte()".\ \n\ Der\ Test\ \u00FCberpr\u00FCft,\ ob\ bei\ der\ Eingabe\ von\ Negativwerten\ der\ richtige\ Text\ zur\u00FCckgegeben\ wird,\n\ indem\ die\ R\u00FCckgabe\ mit\ der\ Vorgabe\ aus\ dem\ Test\ verglichen\ wird.\ \n\ \n
comment9.params=
comment9.target=void\ testeBestellungAufgebenNichtGenugMaterialienFuerTagVerfuegbar()
comment9.text=\ TO\ DO\n\ \n\ Test\ der\ Methode\ "bestellungAufgebenNegativWerte()".\ \n\ Der\ Test\ \u00FCberpr\u00FCft,\ ob\ bei\ der\ Eingabe\ von\ Negativwerten\ der\ richtige\ Text\ zur\u00FCckgegeben\ wird,\n\ indem\ die\ R\u00FCckgabe\ mit\ der\ Vorgabe\ aus\ dem\ Test\ verglichen\ wird.\ \n\ \n
numComments=12
