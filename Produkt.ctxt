#BlueJ class context
comment0.target=Produkt
comment0.text=\r\n\ Die\ Klasse\ Produkt\ umfasst\ die\ Informationen\ zu\ den\ von\ der\ Fabrik\ produzierbaren\ Produkten\ und\ die\ dazugeh\u00F6rige\ Methoden.\r\n\ Diese\ Produkte\ umfassen\ Sofas\ und\ St\u00FChle.\r\n\ \r\n\ @author\ GBI\ Gruppe\ 19\r\n\ @version\ 1.0\r\n\ \r\n\ \r\n
comment1.params=
comment1.target=Produkt()
comment1.text=\ \r\n\ Konstruktor\ f\u00FCr\ Objekte\ der\ Klasse\ Produkt.\ Produkt\ kann\ Zahlenwerte\ annehmen.\r\n\ \r\n\ @param\ \ \ holzeinheiten\ \ \ Das\ ist\ die\ Anzahl\ der\ Einheiten\ Holz,\ welche\ f\u00FCr\ das\ Produkt\ ben\u00F6tigt\ werden.\r\n\ @param\ \ \ schrauben\ \ \ \ \ \ \ Das\ ist\ die\ Anzahl\ der\ Schrauben,\ welche\ f\u00FCr\ das\ Produkt\ ben\u00F6tigt\ werden.\r\n\ @param\ \ \ farbeinheiten\ \ \ Das\ ist\ die\ Anzahl\ der\ Einheiten\ Farbe,\ welche\ f\u00FCr\ das\ Produkt\ ben\u00F6tigt\ werden.\r\n\ @param\ \ \ kartoneinheiten\ Das\ ist\ die\ Anzahl\ Einheiten\ Karton,\ welche\ f\u00FCr\ das\ Produkt\ ben\u00F6tigt\ werden.\r\n\ @param\ \ \ produktionsZeit\ Das\ ist\ die\ Zeit\ (in\ Minuten),\ welche\ zur\ Produktion\ des\ Produkts\ ben\u00F6tigt\ wird.\r\n\ \r\n
comment2.params=zustand
comment2.target=void\ setzeZustand(int)
comment2.text=\r\n\ Methode,\ um\ den\ Zustandswert\ des\ Produkts\ zu\ setzen.\r\n\ @param\ \ \ zustand\ Der\ Zustand\ des\ Produkts\ in\ numerischer\ Form\ (0\ \=\ nicht\ gestartet,\ 1\ \=\ in\ Bearbeitung,\ 2\ \=\ abgeschlossen)\r\n
comment3.params=
comment3.target=int\ gibZustand()
comment3.text=\r\n\ Methode\ gibt\ aktuellen\ Zustand\ zur\u00FCck\ (0\ \=\ nicht\ gestartet,\ 1\ \=\ in\ Bearbeitung,\ 2\ \=\ abgeschlossen).\r\n\ @return\ \ zustand\ Der\ aktuelle\ Zustand\ des\ Produkts\ in\ numerischer\ Form\r\n
comment4.params=produktionsAblauf
comment4.target=void\ setzeProduktionsAblauf(java.util.LinkedList)
comment4.text=\r\n\ Methode,\ um\ den\ Produktionsablauf\ f\u00FCr\ ein\ Produkt\ zu\ setzen.\r\n\ @param\ \ \ produktionsAblauf\ Die\ Reihenfolge\ der\ Produktionsstationen\ (Roboter)\ in\ einer\ LinkedList\r\n
comment5.params=
comment5.target=java.util.LinkedList\ gibProduktionsAblauf()
comment5.text=\r\n\ Methode,\ um\ den\ Produktionsablauf\ f\u00FCr\ ein\ Produkt\ zu\ erhalten.\r\n\ @return\ \ produktionsAblauf\ Die\ Reihenfolge\ der\ Produktionsstationen\ (Roboter)\ in\ einer\ LinkedList\r\n
comment6.params=
comment6.target=void\ naechsteProduktionsStation()
comment6.text=\r\n\ Methode,\ um\ die\ Produktionsstation\ (Roboter)\ eines\ Produkts\ zu\ wechseln.\ Nimmt\ aus\ der\ Liste\ der\ zu\ durchlaufenden\r\n\ Roboter\ den\ jeweils\ n\u00E4chsten\ heraus\ und\ f\u00FCgt\ dem\ Roboter\ das\ aktuelle\ Produkt\ in\ der\ Liste\ der\r\n\ zu\ produzierenden\ Produkte\ hinzu.\r\n
numComments=7
